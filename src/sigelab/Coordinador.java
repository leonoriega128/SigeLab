/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sigelab;

import javax.swing.JOptionPane;
import DAO.*;
import VO.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import Conexion.Conectar;
import javax.swing.ButtonGroup;

/**
 *
 * @author Leo
 */
public class Coordinador extends javax.swing.JFrame {

    /**
     * Creates new form Coordinador
     */
    public Coordinador() {
        initComponents();
        this.setLocationRelativeTo(null);
        ButtonGroup bgroup = new ButtonGroup();
        bgroup.add(jRadioButton1);
        bgroup.add(jRadioButton2);
        jList2.setVisible(false);
        jRadioButton1.setSelected(true);
    }
    Date objDate = new Date();
    Conectar CC = new Conectar();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jRadioButton1 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alfa", "Beta", "Gama", " " }));

        jScrollPane1.setViewportView(jList1);

        jRadioButton1.setText("Solc. Pendientes");
        jRadioButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton1MouseClicked(evt);
            }
        });
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jButton1.setText("Aprobar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Rechazar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Solc. Aprobadas");
        jRadioButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton2MouseClicked(evt);
            }
        });
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"8:00", null, null, null, null, null, null},
                {"9:00", null, null, null, null, null, null},
                {"10:00", "", null, null, null, null, null},
                {"11:00", "", null, null, null, null, null},
                {"12:00", "", null, null, null, null, null},
                {"13:00", null, null, null, null, null, null},
                {"14:00", null, null, null, null, null, null},
                {"15:00", null, null, null, null, null, null},
                {"16:00", null, null, null, null, null, null},
                {"17:00", null, null, "", null, null, null},
                {"18:00", null, null, "", null, null, null},
                {"19:00", null, null, "", null, null, null},
                {"20:00", null, null, null, null, null, null},
                {"21:00", null, null, null, null, null, null}
            },
            new String [] {
                "Horario", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable2MouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setText("Solicitudes mismo horario");

        jScrollPane3.setViewportView(jList2);

        jMenu2.setText("File");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Loggin");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Reportes");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Salir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edit");

        jMenu4.setText("ABM");

        jMenuItem5.setText("Crear Usuario");
        jMenuItem5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem5MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem5MousePressed(evt);
            }
        });
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setText("Modificar Usuario");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem7);

        jMenu3.add(jMenu4);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton1)
                                    .addComponent(jRadioButton2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(616, 616, 616)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(32, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(213, 213, 213)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(213, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MouseClicked
        jLabel1.setText("Solicitudes mismo horario");
        if (jRadioButton1.isSelected()) {
            jButton1.setVisible(true);
            jButton2.setVisible(true);
            jButton3.setVisible(false);
        }
    }//GEN-LAST:event_jRadioButton1MouseClicked

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        ArrayList M = new ArrayList();
        MateriaDAO m = new MateriaDAO();
        M = m.Listar_MateriaVO();
        String materia = "";
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            for (int j = 1; j < jTable2.getColumnCount(); j++) {
                jTable2.setValueAt("", i, j);
            }
        }
        DefaultListModel modelo = new DefaultListModel();
        DefaultListModel modelo2 = new DefaultListModel();
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            for (int j = 1; j < jTable2.getColumnCount(); j++) {
                jTable2.setValueAt("", i, j);
            }
        }
        jDateChooser1.setDate(objDate);
        Character d = String.valueOf(jDateChooser1.getDate()).charAt(8);
        Character i = String.valueOf(jDateChooser1.getDate()).charAt(9);
        String dia = Character.toString(d) + Character.toString(i);

        String valor = Integer.toString(jDateChooser1.getDate().getDay());

        System.out.println("El dia es : " + valor);

        ArrayList E = new ArrayList();
        SolicitudlabDAO sl = new SolicitudlabDAO();
        E = sl.Listar_SolicitudlabVO();

        for (int j = 0; j < E.size(); j++) {
            if ((((SolicitudlabVO) E.get(j)).getEstadoSol().equalsIgnoreCase("pendiente"))) {
                int convertir = 0;
                String horaTabla = "";
                String hora = ((SolicitudlabVO) E.get(j)).getHora().toString();//rs.getString("solFechayHora");
                horaTabla = "";
                System.out.println("La hora es :" + hora);
                for (int k = 0; k < 2; k++) {
                    if (hora.charAt(k) != ':') {
                        horaTabla = horaTabla + Character.toString(hora.charAt(k));
                    }
                }
                System.out.println(horaTabla);
                convertir = Integer.parseInt(horaTabla) - 5;
                System.out.println("asd" + convertir);
                for (int k = 0; k < M.size(); k++) {
                    if (((MateriaVO) M.get(k)).getCodMat() == ((SolicitudlabVO) E.get(j)).getMateria_codMat()) {
                        materia = ((MateriaVO) M.get(k)).getNombre();
                    }
                    jTable2.setValueAt(materia, convertir, 1);
                }
            }
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int row = jTable2.getSelectedRow();
        int col = jTable2.getSelectedColumn();
        ArrayList E = new ArrayList();
        SolicitudlabDAO sl = new SolicitudlabDAO();
        E = sl.Listar_SolicitudlabVO();
//        Connection conn = CC.getConexion();
        jList2.setSelectedIndex(jList1.getSelectedIndex());
//        PreparedStatement ps = null;
        System.out.println(jTable2.isRowSelected(row));
        if (jTable2.isRowSelected(row)) {
            for (int i = 0; i < E.size(); i++) {

            }
//     try {
//                ps = conn.prepareStatement("Update solicitud SET solEstado='Aprobado' where idSolicitud=" + jList2.getSelectedValue());
//                ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Solicitud aprobada con exito!", "", JOptionPane.INFORMATION_MESSAGE);

//
//            } catch (Exception e) {
//
//            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//        int row = jTable2.getSelectedRow();
//        int col = jTable2.getSelectedColumn();
//
//        Connection conn = CC.getConexion();
//        jList2.setSelectedIndex(jList1.getSelectedIndex());
//        System.out.println(jList2.getSelectedValue());
//        PreparedStatement ps = null;
//        if (jTable2.isRowSelected(row)) {
//            int i = JOptionPane.showConfirmDialog(null, "Desea rechazar esta solicitud?", "", JOptionPane.YES_NO_OPTION);
//            if (i == 0) {
//                JOptionPane.showMessageDialog(null, "Solicitud rechazada", "", JOptionPane.INFORMATION_MESSAGE);
//                try {
//                    ps = conn.prepareStatement("Update solicitud SET solEstado='Rechazado' where idSolicitud=" + jList2.getSelectedValue());
//                    ps.executeUpdate();
//                } catch (Exception e) {
//
//                }
//            }
//        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton2MouseClicked
        jLabel1.setText("");
        if (jRadioButton2.isSelected()) {
            jButton1.setVisible(false);
            jButton2.setVisible(false);
            jButton3.setVisible(true);
        }
    }//GEN-LAST:event_jRadioButton2MouseClicked

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed

        ArrayList M = new ArrayList();
        MateriaDAO m = new MateriaDAO();
        M = m.Listar_MateriaVO();
        String materia = "";
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            for (int j = 1; j < jTable2.getColumnCount(); j++) {
                jTable2.setValueAt("", i, j);
            }
        }
        DefaultListModel modelo = new DefaultListModel();
        DefaultListModel modelo2 = new DefaultListModel();
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            for (int j = 1; j < jTable2.getColumnCount(); j++) {
                jTable2.setValueAt("", i, j);
            }
        }
        jDateChooser1.setDate(objDate);
        Character d = String.valueOf(jDateChooser1.getDate()).charAt(8);
        Character i = String.valueOf(jDateChooser1.getDate()).charAt(9);
        String dia = Character.toString(d) + Character.toString(i);

        String valor = Integer.toString(jDateChooser1.getDate().getDay());

        System.out.println("El dia es : " + valor);

        ArrayList E = new ArrayList();
        SolicitudlabDAO sl = new SolicitudlabDAO();
        E = sl.Listar_SolicitudlabVO();

        for (int j = 0; j < E.size(); j++) {
            if ((((SolicitudlabVO) E.get(j)).getEstadoSol().equalsIgnoreCase("aprobado"))) {
                int convertir = 0;
                String horaTabla = "";
                String hora = ((SolicitudlabVO) E.get(j)).getHora().toString();//rs.getString("solFechayHora");
                horaTabla = "";
                System.out.println("La hora es :" + hora);
                for (int k = 0; k < 2; k++) {
                    if (hora.charAt(k) != ':') {
                        horaTabla = horaTabla + Character.toString(hora.charAt(k));
                    }
                }
                System.out.println(horaTabla);
                convertir = Integer.parseInt(horaTabla) - 5;
                System.out.println("asd" + convertir);
                for (int k = 0; k < M.size(); k++) {
                    if (((MateriaVO) M.get(k)).getCodMat() == ((SolicitudlabVO) E.get(j)).getMateria_codMat()) {
                        materia = ((MateriaVO) M.get(k)).getNombre();
                    }
                    jTable2.setValueAt(materia, convertir, jDateChooser1.getDate().getDay());
                }
            }
        }

    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
//        int row = jTable2.getSelectedRow();
//        int col = jTable2.getSelectedColumn();
//
//        int j = 0;
//        Connection conn = CC.getConexion();
//        jList2.setSelectedIndex(jList1.getSelectedIndex());
//        System.out.println(jList2.getSelectedValue());
//        PreparedStatement ps = null;
//        if (jTable2.isRowSelected(row)) {
//            int i = JOptionPane.showConfirmDialog(null, "Desea cancelar esta solicitud?", "", JOptionPane.YES_NO_OPTION);
//            if (i == 0) {
//                JOptionPane.showMessageDialog(null, "Solicitud cancelada", "", JOptionPane.INFORMATION_MESSAGE);
//                try {
//                    ps = conn.prepareStatement("Update solicitud SET solEstado='Cancelado' where idSolicitud=" + jList2.getSelectedValue());
//                    ps.executeUpdate();
//                } catch (Exception e) {
//
//                }
//                try {
//                    jDateChooser1.setDate(objDate);
//                    Character d = String.valueOf(jDateChooser1.getDate()).charAt(8);
//                    Character c = String.valueOf(jDateChooser1.getDate()).charAt(9);
//                    String dia = Character.toString(d) + Character.toString(c);
//                    ResultSet rs = null;
//                    Connection con = CC.getConexion();
//
//                    String sql = "SELECT * FROM solicitud WHERE solFechaSolic like '%" + dia + "%' ";
//                    ps = con.prepareStatement(sql);
//                    rs = ps.executeQuery();
//
//                    int convertir = 0;
//                    String horaTabla = "";
//                    while (rs.next()) {
//                        if (rs.getString("solEstado").equalsIgnoreCase("Aprobado")) {
//                            String hora = rs.getString("solFechayHora");
//                            horaTabla = "";
//                            for (int k = 0; k < 2; k++) {
//                                if (hora.charAt(k) != ':') {
//                                    horaTabla = horaTabla + Character.toString(hora.charAt(k));
//
//                                }
//                            }
//                            System.out.println(horaTabla);
//                            convertir = Integer.parseInt(horaTabla) - 8;
//                            jTable2.setValueAt(rs.getString("Materia"), convertir, jDateChooser1.getDate().getDay());
//                        }
//
//                    }
//
//                } catch (Exception e) {
//
//                }
//            }
//        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed

    }//GEN-LAST:event_jTable2MousePressed

    private void jTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseReleased
        String convert;
        DefaultListModel modelo = new DefaultListModel();
        DefaultListModel modelo2 = new DefaultListModel();

        ArrayList E = new ArrayList();
        SolicitudlabDAO sl = new SolicitudlabDAO();
        E = sl.Listar_SolicitudlabVO();

        ArrayList M = new ArrayList();
        MateriaDAO ml = new MateriaDAO();
        M = ml.Listar_MateriaVO();

        int row = jTable2.getSelectedRow();
        int col = jTable2.getSelectedColumn();
        if (jTable2.isRowSelected(row)) {

            if (jRadioButton1.isSelected()) {

                for (int j = 0; j < E.size(); j++) {
                    if ((((SolicitudlabVO) E.get(j)).getEstadoSol().equalsIgnoreCase("pendiente"))) {
                        int convertir = 0;
                        String horaTabla = "";
                        String hora = ((SolicitudlabVO) E.get(j)).getHora().toString();//rs.getString("solFechayHora");
                        horaTabla = "";
                        int suma = Integer.parseInt(Character.toString(hora.charAt(0)) + Character.toString(hora.charAt(1))) + 3;

                        if (suma < 10) {
                            convert = "0" + suma + ":" + "00";
                        } else {
                            convert = suma + ":" + "00";
                        }

                        //          System.out.println("La hora es :" + convert);
                        for (int k = 0; k < 2; k++) {
                            if (convert.charAt(k) != ':') {
                                horaTabla = horaTabla + Character.toString(convert.charAt(k));
                            }
                        }
                        // System.out.println("hora tabla 10am " + horaTabla);
                        convertir = Integer.parseInt(horaTabla) - 8;

                        if (Integer.toString(convertir).equalsIgnoreCase(String.valueOf(jTable2.getValueAt(row, 0)))) {
                            for (int i = 0; i < M.size(); i++) {
                                if (((MateriaVO) M.get(i)).getCodMat() == ((SolicitudlabVO) E.get(j)).getMateria_codMat()) {
                                    modelo.addElement(((MateriaVO) M.get(i)).getNombre());
                                    modelo2.addElement("idSolicitud");
                                }
                            }
                        }
                    }
                }
                jList1.setModel(modelo);
                jList2.setModel(modelo2);
//                        if (convert.charAt(0) == '0') {
//                            convert = Character.toString(convert.charAt(1)) + Character.toString(convert.charAt(2)) + Character.toString(convert.charAt(3)) + Character.toString(convert.charAt(4));
//                        }
//                        if (convert.equalsIgnoreCase(String.valueOf(jTable2.getValueAt(row, 0)))) {
//
//                            modelo.addElement(rs.getString("Materia"));
//                            modelo2.addElement(rs.getString("idSolicitud"));
//                        }
//                    }
//                    jList1.setModel(modelo);
//                    jList2.setModel(modelo2);
//                }
                if (jRadioButton2.isSelected()) {
                    for (int j = 0; j < E.size(); j++) {
                        if ((((SolicitudlabVO) E.get(j)).getEstadoSol().equalsIgnoreCase("aprobado"))) {
                            //int convertir = 0;
                            String horaTabla = "";
                            String hora = ((SolicitudlabVO) E.get(j)).getHora().toString();//rs.getString("solFechayHora");
                            horaTabla = "";
                            int suma = Integer.parseInt(Character.toString(hora.charAt(0)) + Character.toString(hora.charAt(1))) + 3;

                            if (suma < 10) {
                                convert = "0" + suma + ":" + "00";
                            } else {
                                convert = suma + ":" + "00";
                            }
                            //   System.out.println("La hora es :" + convert);

                            for (int k = 0; k < 2; k++) {
                                if (convert.charAt(k) != ':') {
                                    horaTabla = horaTabla + Character.toString(convert.charAt(k));
                                }
                            }
                            int convertir = Integer.parseInt(horaTabla) - 5;
                            // System.out.println("Estoy entrando a la lista");                        
                            if (Integer.toString(convertir).equalsIgnoreCase(String.valueOf(jTable2.getValueAt(row, 0)))) {
                                for (int i = 0; i < M.size(); i++) {
                                    if (((MateriaVO) M.get(i)).getCodMat() == ((SolicitudlabVO) E.get(j)).getMateria_codMat()) {
                                        modelo.addElement(((MateriaVO) M.get(i)).getNombre());
                                        modelo2.addElement("idSolicitud");
                                    }
                                }
                            }
                        }
                    }
                    jList1.setModel(modelo);
                    jList2.setModel(modelo2);

                }
//                    PreparedStatement ps = null;
//                    ResultSet rs = null;
//                    Connection con = CC.getConexion();
//
//                    String sql = "SELECT * FROM solicitud WHERE solEstado = 'Aprobado' ";
//                    ps = con.prepareStatement(sql);
//                    rs = ps.executeQuery();
//                    while (rs.next()) {
//                        String hora = rs.getString("solFechayHora");
//                        String convert = Character.toString(hora.charAt(0)) + Character.toString(hora.charAt(1)) + ":" + "00";
//                        if (convert.charAt(0) == '0') {
//                            convert = Character.toString(convert.charAt(1)) + Character.toString(convert.charAt(2)) + Character.toString(convert.charAt(3)) + Character.toString(convert.charAt(4));
//                        }
//                        if (convert.equalsIgnoreCase(String.valueOf(jTable2.getValueAt(row, 0)))) {
//                            modelo.addElement(rs.getString("Materia"));
//                            modelo2.addElement(rs.getString("idSolicitud"));
//                        }
//                    }
//                    jList1.setModel(modelo);
//                    jList2.setModel(modelo2);
//                }
//            } catch (Exception e) {
//
//            }
//        }
                //
                //        System.out.println("inicio :" + inicio);
                //        String convertedToString = String.valueOf(jTable2.getValueAt(inicio, 0));
                //        jTextField2.setText((convertedToString));
                //        convertedToString = String.valueOf(jTable2.getValueAt(seleccionados.length + inicio, 0));
                //        jTextField1.setText(convertedToString);
                //          }
            }
        }
    }//GEN-LAST:event_jTable2MouseReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
//        if (jMenuItem1.getActionCommand().equalsIgnoreCase("Loggin")) {
//            //esto es para saber si hago click sobre el item
//        }
//        Loggin L = new Loggin();
//        L.setVisible(true);
//        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
//        ArrayList<String> A = new ArrayList<>();
//        ArrayList<String> B = new ArrayList<>();
//        ArrayList<String> Contador = new ArrayList<>();
//
//        int convertir = 0;
//        try {
//
//            PreparedStatement ps = null;
//            ResultSet rs = null;
//            Connection con = CC.getConexion();
//
//            String sql = "SELECT LegajoU FROM solicitud";
//            ps = con.prepareStatement(sql);
//            rs = ps.executeQuery();
//
//            while (rs.next()) {
//                A.add(rs.getString("LegajoU"));
//                convertir = convertir + 1;
//            }
//
//        } catch (Exception e) {
//
//        }
//        try {
//            if (convertir % 2 == 0) {
//                for (int i = 0; i < A.size(); i++) {
//                    if (A.get(i).equalsIgnoreCase(A.get(i + 1))) {
//                        B.add(A.get(i));
//                        i++;
//                    }
//                }
//                for (int i = 0; i < B.size(); i++) {
//                    System.out.println(B.get(i));
//                }
//
//                for (int i = 0; i < B.size(); i++) {
//                    for (int j = 0; j < B.size(); j++) {
//                        if (B.get(i).equalsIgnoreCase(B.get(j))) {
//                            B.remove(i);
//                        }
//                    }
//                }
        //            for (int i = 0; i < B.size(); i++) {
        //                for (int j = 0; j < B.size(); j++) {
        //                    if (B.get(i).equalsIgnoreCase(B.get(j))) {
        //                        B.remove(i);
        //                    }
        //                }
        //            }
        //            for (int i = 0; i < B.size(); i++) {
        //                if (B.get(i).equalsIgnoreCase(B.get(i + 1))) {
        //                    B.remove(i);
        //                    i++;
        //                }
        //            }
//                for (int i = 0; i < B.size(); i++) {
//                    System.out.println(B.get(i));
//                }
//
//                int c;
//                for (int i = 0; i < B.size(); i++) {
//                    c = 0;
//                    for (int j = 0; j < A.size(); j++) {
//                        if (B.get(i).equalsIgnoreCase(A.get(j))) {
//                            c = c + 1;
//                        }
//                    }
//                    Contador.add(Integer.toString(c));
//                }
//                Estadisticas E = new Estadisticas();
//                E.RecibirListas(B, Contador, convertir);
//                this.setVisible(false);
//                E.setVisible(true);
//            } else {
//
//                for (int i = 0; i < A.size(); i++) {
//                    for (int j = 0; j < A.size(); j++) {
//                        if (A.get(i).equalsIgnoreCase(A.get(j))) {
//                            B.add(A.get(i));
//                            i++;
//                        }
//                    }
//
//                }
//                for (int i = 0; i < B.size(); i++) {
//                    System.out.println(B.get(i));
//                }
//
//                for (int i = 0; i < B.size(); i++) {
//                    for (int j = 0; j < B.size(); j++) {
//                        if (B.get(i).equalsIgnoreCase(B.get(j))) {
//                            B.remove(i);
//                        }
//                    }
//                }
//                for (int i = 0; i < B.size(); i++) {
//                    if (B.get(i).equalsIgnoreCase(B.get(i + 1))) {
//                        B.remove(i);
//                        i++;
//                    }
//                }
//                for (int i = 0; i < B.size(); i++) {
//                    System.out.println(B.get(i));
//                }
//
//                int c;
//                for (int i = 0; i < B.size(); i++) {
//                    c = 0;
//                    for (int j = 0; j < A.size(); j++) {
//                        if (B.get(i).equalsIgnoreCase(A.get(j))) {
//                            c = c + 1;
//                        }
//                    }
//                    Contador.add(Integer.toString(c));
//                }
//                Estadisticas E = new Estadisticas();
//                E.RecibirListas(B, Contador, convertir);
//                this.setVisible(false);
//                E.setVisible(true);
//
//            }
//        } catch (IndexOutOfBoundsException e) {
//            System.out.println(e);
//        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        System.exit(1);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked

    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed

    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenuItem5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem5MouseClicked
        Usuario u = new Usuario();
        u.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem5MouseClicked

    private void jMenuItem5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem5MousePressed
//        Usuario u = new Usuario();
//        u.setVisible(true);
//        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem5MousePressed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
//        Modificar u = new Modificar();
//        u.setVisible(true);
//        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        String valor = "";
        String dia = "";
        int convertir = 0;
        ArrayList M = new ArrayList();
        MateriaDAO m = new MateriaDAO();
        M = m.Listar_MateriaVO();

        ArrayList E = new ArrayList();
        SolicitudlabDAO sl = new SolicitudlabDAO();
        E = sl.Listar_SolicitudlabVO();

        jButton1.setVisible(true);
        jButton2.setVisible(true);
        jButton3.setVisible(false);

        jDateChooser1.setDate(objDate);
        Character d = String.valueOf(jDateChooser1.getDate()).charAt(8);
        Character i = String.valueOf(jDateChooser1.getDate()).charAt(9);
        dia = Character.toString(d) + Character.toString(i);
        System.out.println("fecha de la base: " + dia);

        valor = Integer.toString(jDateChooser1.getDate().getDay());

        String convert = "";
        if (jRadioButton1.isSelected()) {
            jButton1.setVisible(true);
            jButton2.setVisible(true);
            jButton3.setVisible(false);

            String horaTabla = "";
            boolean b = false;
            for (int j = 0; j < E.size(); j++) {
                System.out.println("La fecha es :" + ((SolicitudlabVO) E.get(j)).getFecha());
                String DiaBdd = Character.toString(((SolicitudlabVO) E.get(j)).getFecha().charAt(8)) + ((SolicitudlabVO) E.get(j)).getFecha().charAt(9);
                System.out.println("la fecha convertida es: " + DiaBdd);
                //if (((SolicitudlabVO) E.get(j)).getFecha().equalsIgnoreCase("pendiente")) {
                if (((SolicitudlabVO) E.get(j)).getEstadoSol().equalsIgnoreCase("pendiente") && DiaBdd.equalsIgnoreCase(dia)) {
                    String hora = ((SolicitudlabVO) E.get(j)).getHora().toString();
                    horaTabla = "";
                    int suma = Integer.parseInt(Character.toString(hora.charAt(0)) + Character.toString(hora.charAt(1))) + 3;
                    if (suma < 10) {
                        convert = "0" + suma + ":" + "00";
                    } else {
                        convert = suma + ":" + "00";
                    }

                    for (int k = 0; k < 2; k++) {
                        if (hora.charAt(k) != ':') {
                            horaTabla = horaTabla + Character.toString(convert.charAt(k));
                            b = true;
                        }
                    }

                    convertir = Integer.parseInt(horaTabla) - 8;

                    //  System.out.println("la hora de la tabla es: " + horaTabla);
                    if (b) {
                        for (int k = 0; k < M.size(); k++) {
                            if (((SolicitudlabVO) E.get(j)).getMateria_codMat() == ((MateriaVO) M.get(k)).getCodMat()) {
                                jTable2.setValueAt(((MateriaVO) M.get(k)).getNombre(), convertir, jDateChooser1.getDate().getDay());
                            }
                        }
                        b = false;
                        System.out.println(horaTabla);
                        // convertir = Integer.parseInt(horaTabla) - 5;

                        //              System.out.println("hora convertida es " + horaTabla);
                    }
                    //  }
                }
            }

            if (jRadioButton2.isSelected()) {
                jButton1.setVisible(false);
                jButton2.setVisible(false);
                jButton3.setVisible(true);

                convertir = 0;
                horaTabla = "";
                b = false;
                for (int j = 0; j < E.size(); j++) {

                    if (((SolicitudlabVO) E.get(j)).getEstadoSol().equalsIgnoreCase("aprobado")) {
                        Object h = ((SolicitudlabVO) E.get(j)).getHora();
                        String hora = String.valueOf(h);
                        horaTabla = "";
                        for (int k = 0; k < 2; k++) {
                            if (hora.charAt(k) != ':') {
                                horaTabla = horaTabla + Character.toString(hora.charAt(k));
                                b = true;
                            }
                        }
                        if (b) {
                            for (int k = 0; k < M.size(); k++) {
                                if (((SolicitudlabVO) E.get(j)).getMateria_codMat() == ((MateriaVO) M.get(k)).getCodMat()) {
                                    jTable2.setValueAt(((MateriaVO) M.get(k)).getNombre(), convertir, 1);
                                }
                            }
                        }
                        b = false;
                        System.out.println(horaTabla);
                        convertir = Integer.parseInt(horaTabla) - 5;

                        //            System.out.println("hora convertida es " + horaTabla);
                    }
                }
            }
        }
    }//GEN-LAST:event_formWindowActivated

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        Usuario u = new Usuario();
        u.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Coordinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Coordinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Coordinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Coordinador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Coordinador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
